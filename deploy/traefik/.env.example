# ═══════════════════════════════════════════════════════════════════
# Traefik Environment Variables for WolfGuard Site
# ═══════════════════════════════════════════════════════════════════
#
# Copy this file to .env and update with your actual values:
#   cp .env.example .env
#   nano .env
#
# ═══════════════════════════════════════════════════════════════════

# ───────────────────────────────────────────────────────────────────
# Domain Configuration
# ───────────────────────────────────────────────────────────────────
# Primary domain for the WolfGuard site
DOMAIN=wolfguard.io

# Alternate domain (www subdomain)
WWW_DOMAIN=www.wolfguard.io

# Additional domains (comma-separated, optional)
# ADDITIONAL_DOMAINS=wolfguard.com,www.wolfguard.com

# ───────────────────────────────────────────────────────────────────
# SSL/TLS Configuration
# ───────────────────────────────────────────────────────────────────
# Email for Let's Encrypt notifications (certificate expiry, etc.)
SSL_EMAIL=admin@wolfguard.io

# Certificate resolver to use (letsencrypt or cloudflare)
# - letsencrypt: HTTP-01 challenge (requires port 80 accessible)
# - cloudflare: DNS-01 challenge (supports wildcards, requires CF token)
CERT_RESOLVER=letsencrypt

# ACME Server (use staging for testing to avoid rate limits)
# Production: https://acme-v02.api.letsencrypt.org/directory
# Staging: https://acme-staging-v02.api.letsencrypt.org/directory
ACME_SERVER=https://acme-v02.api.letsencrypt.org/directory

# ───────────────────────────────────────────────────────────────────
# Cloudflare Configuration (if using DNS challenge)
# ───────────────────────────────────────────────────────────────────
# Cloudflare account email
CF_API_EMAIL=admin@example.com

# Cloudflare API token (requires DNS edit permissions)
# Create at: https://dash.cloudflare.com/profile/api-tokens
# Required permissions: Zone.DNS (Edit)
CF_DNS_API_TOKEN=your_cloudflare_api_token_here

# Cloudflare Zone ID (optional, for specific zone)
# CF_ZONE_API_TOKEN=your_zone_specific_token

# ───────────────────────────────────────────────────────────────────
# Network Configuration
# ───────────────────────────────────────────────────────────────────
# Traefik public network name
TRAEFIK_NETWORK=traefik-public

# External IP address (optional, for documentation)
# SERVER_IP=203.0.113.42

# ───────────────────────────────────────────────────────────────────
# Traefik Dashboard Configuration
# ───────────────────────────────────────────────────────────────────
# Enable Traefik dashboard (true/false)
TRAEFIK_DASHBOARD=true

# Dashboard domain (subdomain recommended for security)
TRAEFIK_DASHBOARD_DOMAIN=traefik.infra4.dev

# Dashboard username (for basic auth)
TRAEFIK_DASHBOARD_USER=admin

# Dashboard password (for basic auth)
# Generate with: echo $(htpasswd -nB admin) | sed -e s/\\$/\\$\\$/g
# Or use: openssl passwd -apr1
TRAEFIK_DASHBOARD_PASSWORD_HASH='$$apr1$$8EVjn/nj$$GiLUZqcbueTFeD23SuB6x0'

# ───────────────────────────────────────────────────────────────────
# Logging Configuration
# ───────────────────────────────────────────────────────────────────
# Log level (DEBUG, INFO, WARN, ERROR)
LOG_LEVEL=INFO

# Enable access logs (true/false)
ACCESS_LOGS=true

# ───────────────────────────────────────────────────────────────────
# Security Configuration
# ───────────────────────────────────────────────────────────────────
# Trusted IPs for forwarded headers (comma-separated)
TRUSTED_IPS=127.0.0.1/32,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

# IP whitelist for admin access (comma-separated, optional)
# ADMIN_WHITELIST_IPS=192.168.1.0/24,10.0.0.0/8

# ───────────────────────────────────────────────────────────────────
# Build Metadata (auto-generated)
# ───────────────────────────────────────────────────────────────────
# Build date (ISO 8601 format)
BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')

# Git commit hash
GIT_COMMIT=$(git rev-parse --short HEAD 2>/dev/null || echo 'unknown')

# Git branch
GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo 'unknown')

# ───────────────────────────────────────────────────────────────────
# Performance Configuration
# ───────────────────────────────────────────────────────────────────
# Rate limiting (requests per second)
RATE_LIMIT_AVERAGE=100
RATE_LIMIT_BURST=50

# HTTP/2 max concurrent streams
HTTP2_MAX_CONCURRENT_STREAMS=250

# HTTP/3 advertised port
HTTP3_ADVERTISED_PORT=443

# ───────────────────────────────────────────────────────────────────
# Container Resource Limits
# ───────────────────────────────────────────────────────────────────
# CPU limit (number of cores)
CPU_LIMIT=2.0
CPU_RESERVATION=0.5

# Memory limit (MB)
MEMORY_LIMIT=512M
MEMORY_RESERVATION=128M

# ───────────────────────────────────────────────────────────────────
# Environment
# ───────────────────────────────────────────────────────────────────
# Deployment environment (production, staging, development)
ENVIRONMENT=production

# Timezone
TZ=UTC

# ═══════════════════════════════════════════════════════════════════
# Notes:
# ═══════════════════════════════════════════════════════════════════
#
# 1. Security:
#    - Never commit .env file to version control
#    - Restrict file permissions: chmod 600 .env
#    - Rotate secrets regularly (especially API tokens)
#
# 2. Cloudflare Token:
#    - Create at: https://dash.cloudflare.com/profile/api-tokens
#    - Template: "Edit zone DNS"
#    - Permissions: Zone.DNS (Edit)
#    - Include: Specific zone (your domain)
#
# 3. Dashboard Password:
#    - Generate with Apache htpasswd:
#      htpasswd -nB admin
#    - Escape $ with $$: $$apr1$$...
#
# 4. Testing:
#    - Use ACME staging server for testing to avoid rate limits
#    - Switch to production server once everything works
#
# 5. DNS Configuration:
#    - Ensure A/AAAA records point to your server
#    - Wait for DNS propagation before requesting certificates
#    - Verify with: dig wolfguard.io
#
# ═══════════════════════════════════════════════════════════════════
