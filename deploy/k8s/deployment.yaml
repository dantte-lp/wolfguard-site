---
# Namespace for WolfGuard Site
apiVersion: v1
kind: Namespace
metadata:
  name: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: namespace

---
# ConfigMap for environment variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: wolfguard-site-config
  namespace: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: config
data:
  NODE_ENV: "production"
  NEXT_TELEMETRY_DISABLED: "1"
  PORT: "3000"
  HOSTNAME: "0.0.0.0"
  TZ: "UTC"

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wolfguard-site
  namespace: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: web
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: wolfguard-site
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wolfguard-site
        app.kubernetes.io/component: web
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault

      containers:
      - name: wolfguard-site
        image: localhost/wolfguard-site:latest
        imagePullPolicy: Always

        ports:
        - name: http
          containerPort: 3000
          protocol: TCP

        envFrom:
        - configMapRef:
            name: wolfguard-site-config

        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"

        livenessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3

        startupProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 12

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL

        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/.next/cache

      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - wolfguard-site
              topologyKey: kubernetes.io/hostname

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: wolfguard-site
  namespace: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: service
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: web
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  sessionAffinity: None

---
# Traefik IngressRoute for HTTPS
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: wolfguard-site-https
  namespace: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: ingress
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`wolfguard.io`) || Host(`www.wolfguard.io`)
    kind: Rule
    services:
    - name: wolfguard-site
      port: 80
      scheme: http
    middlewares:
    - name: security-headers
    - name: compression
    - name: rate-limit
  tls:
    certResolver: letsencrypt
    domains:
    - main: wolfguard.io
      sans:
      - www.wolfguard.io

---
# Traefik IngressRoute for HTTP (redirect to HTTPS)
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: wolfguard-site-http
  namespace: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: ingress
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`wolfguard.io`) || Host(`www.wolfguard.io`)
    kind: Rule
    services:
    - name: wolfguard-site
      port: 80
    middlewares:
    - name: https-redirect

---
# Middleware: HTTPS Redirect
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: https-redirect
  namespace: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: middleware
spec:
  redirectScheme:
    scheme: https
    permanent: true

---
# Middleware: Security Headers
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: security-headers
  namespace: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: middleware
spec:
  headers:
    frameDeny: true
    contentTypeNosniff: true
    browserXssFilter: true
    stsSeconds: 31536000
    stsIncludeSubdomains: true
    stsPreload: true
    forceSTSHeader: true
    customResponseHeaders:
      X-Frame-Options: "DENY"
      X-Content-Type-Options: "nosniff"
      X-XSS-Protection: "1; mode=block"
      Referrer-Policy: "strict-origin-when-cross-origin"
      Permissions-Policy: "geolocation=(), microphone=(), camera=()"
    contentSecurityPolicy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';"

---
# Middleware: Compression
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: compression
  namespace: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: middleware
spec:
  compress:
    excludedContentTypes:
    - text/event-stream

---
# Middleware: Rate Limiting
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: rate-limit
  namespace: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: middleware
spec:
  rateLimit:
    average: 100
    period: 1s
    burst: 200

---
# HorizontalPodAutoscaler (optional)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: wolfguard-site
  namespace: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: wolfguard-site
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max

---
# PodDisruptionBudget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: wolfguard-site
  namespace: wolfguard-site
  labels:
    app.kubernetes.io/name: wolfguard-site
    app.kubernetes.io/component: pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: wolfguard-site
      app.kubernetes.io/component: web
