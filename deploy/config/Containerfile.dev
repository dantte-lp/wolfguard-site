# syntax=docker/dockerfile:1.4
# Development Containerfile for WolfGuard site
# This container is for development purposes only
# Uses rootless configuration to prevent permission issues

FROM docker.io/library/node:lts-trixie-slim

# OCI Labels - Development Stage
LABEL org.opencontainers.image.title="WolfGuard Site Development"
LABEL org.opencontainers.image.description="Development environment for WolfGuard Next.js site"
LABEL org.opencontainers.image.vendor="WolfGuard"

# Install development dependencies and update npm to latest
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    python3 \
    make \
    g++ \
    curl \
    ca-certificates \
    sudo \
    && rm -rf /var/lib/apt/lists/* \
    && npm install -g npm@11.6.2

# Configure node user for rootless operation
# The node user in node:22 has UID 1000 and GID 1000
RUN usermod -u 1000 node \
    && groupmod -g 1000 node \
    && echo "node ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Set working directory
WORKDIR /app

# Create .next directory with correct permissions before mounting
RUN mkdir -p /app/.next /app/node_modules /app/.npm \
    && chown -R node:node /app

# Switch to non-root user BEFORE any npm operations
USER node

# Set npm cache directory to writable location
ENV NPM_CONFIG_CACHE=/app/.npm

# Expose Next.js dev server port
EXPOSE 3000

# Health check for dev server
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

# Default command (will be overridden by compose)
CMD ["npm", "run", "dev"]
