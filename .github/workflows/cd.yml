name: CD - Main Branch Deployment

on:
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  REGISTRY: ghcr.io
  CONTAINER_NAME: wolfguard-site

jobs:
  build-container:
    name: Build Container Image
    runs-on: self-hosted

    outputs:
      image-tag: steps.meta.outputs.tags
      image-digest: steps.build.outputs.digest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        run: npm run build
        env:
          NODE_ENV: production

      - name: Generate image metadata
        id: meta
        run: |
          IMAGE_TAG="ghcr.io/${GITHUB_REPOSITORY}:$(git rev-parse --short HEAD)"
          IMAGE_LATEST="ghcr.io/${GITHUB_REPOSITORY}:latest"
          echo "tags=${IMAGE_TAG}" >> ${GITHUB_OUTPUT}
          echo "latest=${IMAGE_LATEST}" >> ${GITHUB_OUTPUT}

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build container image
        id: build
        run: |
          podman build \
            --file deploy/config/Containerfile.prod \
            --tag ghcr.io/${{ github.repository }}:latest \
            --tag ghcr.io/${{ github.repository }}:${{ github.sha }} \
            --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
            --build-arg GIT_COMMIT=${{ github.sha }} \
            .

      - name: Push container images
        run: |
          podman push ghcr.io/${{ github.repository }}:latest
          podman push ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Test container
        run: |
          podman run --rm ghcr.io/${{ github.repository }}:${{ github.sha }} node --version

  deploy:
    name: Deploy to Server
    runs-on: self-hosted
    needs: [build-container]
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy with Ansible
        run: |
          cd deploy/ansible
          ansible-playbook -i inventory.yml deploy.yml

  health-check:
    name: Post-Deployment Health Check
    runs-on: self-hosted
    needs: [deploy]
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/master'

    steps:
      - name: Wait for service
        run: sleep 10

      - name: Check container status
        run: podman ps | grep wolfguard-site

      - name: HTTP health check
        run: |
          for i in {1..5}; do
            if curl -f http://localhost:3000; then
              echo "Health check passed"
              exit 0
            fi
            sleep 5
          done
          exit 1
